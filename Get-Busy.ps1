function Get-Busy {
<#
.SYNOPSIS
    Makes you look busy.
.DESCRIPTION
    Displays a progress bar (or two) with random actions changing every few seconds.
    The name of the every action is generated by randomly picking a verb + adjective + noun from a list of words defined in the function.
.EXAMPLE
    Just run the function and enjoy
    PS> Get-Busy
.EXAMPLE
    You can specify the duration
    PS> Get-Busy -Duration 1000
.EXAMPLE
    Run with the LookMoreImportant switch to add an extra progress bar.
    PS> Get-Busy -Duration 1000 -LookMoreImportant
#>

[CmdletBinding()]
[Alias()]
Param
(
    # Duration in seconds (approximately)
    [Parameter(Mandatory=$false,
               ValueFromPipelineByPropertyName=$true,
               Position=0)]
    [uint64]$Duration = 60,

    # Add an additional progress bar to look extra busy
    [switch]$LookMoreImportant
)

$verbs = @"
compiling
recompiling
running
executing
updating
testing
synchronizing
configuring
backing up
restoring
cleaning up
formatting
refreshing
simulating
structuring
normalizing
setting up
emulating
tweaking
"@

$adjectives = @"
binary
offline
online
cloud-based
server
local
administrative
distributed
internal
external
"@

$nouns = @"
identities
databases
entities
entropy
queries
data sets
cache
processes
libraries
repository
encoding
templates
debugger
arrays
APIs
interface
topology
vectors
"@

    $verbs = $verbs -split "`r`n"
    $adjectives = $adjectives -split "`r`n"
    $nouns = $nouns -split "`r`n"

    function GetRandomAction($PreviousAction = '')
    {
        # Generates an action from the verb-adjective-noun list
        # If specified, generates an action that doesn't contain any keywords from the previous action
        do {
            $ran = Get-Random -Minimum 0 -Maximum $verbs.Count
            $w1 = $verbs[$ran]
            $w1 = $w1.Substring(0, 1).ToUpper() + $w1.Substring(1, $w1.Length -1)
        } while ($PreviousAction -match $w1)

        do {
            $ran = Get-Random -Minimum 0 -Maximum $adjectives.Count
            $w2 = $adjectives[$ran]
        } while ($PreviousAction -match $w2)

        do {
            $ran = Get-Random -Minimum 0 -Maximum $nouns.Count
            $w3 = $nouns[$ran]
        } while ($PreviousAction -match $w3)
        "$w1 $w2 $w3"
    }

    $mainAction = GetRandomAction
    for ($i=0; $i -lt $Duration; $i++) {
        $number = Get-Random -Maximum 8
    
        if ($i % 2 -eq 0 -and $number -lt 4)
        {
            $mainAction = GetRandomAction($mainAction)
        }

        $percent = ($i/$duration*100).ToString("0.00")
        Write-Progress -Activity "$mainAction..." -PercentComplete $percent -CurrentOperation "$percent% complete" -Status "Please wait"
        Start-Sleep 1

        # Second progress bar
        if ($LookMoreImportant) {
            $nestedAction = ''
            if ($i % 2 -eq 0 -and $number -lt 3)
            {
                $ran = Get-Random -Minimum 5 -Maximum 24
                do
                {
                    $nestedAction = GetRandomAction($nestedAction)
                }
                while ($nestedAction -eq $mainAction)

                for ($j = 1; $j -lt $ran; $j++)
                {
                    $complete = [int](($j+1)/$ran*100)
                    Write-Progress -Activity "$nestedAction..." -PercentComplete $complete -CurrentOperation "$complete% complete" -Status "Please wait" -Id 1
                    Start-Sleep -Milliseconds 100
                }
            }
        } # end of if
    } # end of for
} # end of Get-Busy